// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should set props to GeodeticInput 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-0>*:not(style)~*:not(style) {
  margin-top: 3px;
  -webkit-margin-end: 0px;
  margin-inline-end: 0px;
  margin-bottom: 0px;
  -webkit-margin-start: 0px;
  margin-inline-start: 0px;
}

.emotion-1 {
  width: 100%;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  position: relative;
}

.emotion-2 {
  -webkit-padding-end: 2rem;
  padding-inline-end: 2rem;
}

.emotion-2:focus,
.emotion-2[data-focus] {
  z-index: unset;
}

.emotion-3 {
  position: absolute;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  pointer-events: none;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

<div
  className="chakra-stack emotion-0"
>
  <div
    className="chakra-select__wrapper emotion-1"
  >
    <select
      className="chakra-select emotion-2"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      value="degree"
    >
      <option
        value="millisec"
      >
        millisec
      </option>
      <option
        value="degree"
      >
        degree
      </option>
    </select>
    <div
      className="chakra-select__icon-wrapper emotion-3"
    >
      <svg
        aria-hidden={true}
        className="chakra-select__icon"
        focusable={false}
        role="presentation"
        style={
          Object {
            "color": "currentColor",
            "height": "1em",
            "width": "1em",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
          fill="currentColor"
        />
      </svg>
    </div>
  </div>
  <div
    className="chakra-select__wrapper emotion-1"
  >
    <select
      className="chakra-select emotion-2"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      value="WGS84"
    >
      <option
        value="Tokyo"
      >
        Tokyo
      </option>
      <option
        value="WGS84"
      >
        WGS84
      </option>
    </select>
    <div
      className="chakra-select__icon-wrapper emotion-3"
    >
      <svg
        aria-hidden={true}
        className="chakra-select__icon"
        focusable={false}
        role="presentation"
        style={
          Object {
            "color": "currentColor",
            "height": "1em",
            "width": "1em",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
          fill="currentColor"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`Should set props to GeodeticInput(datum is Tokyo) 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-0>*:not(style)~*:not(style) {
  margin-top: 3px;
  -webkit-margin-end: 0px;
  margin-inline-end: 0px;
  margin-bottom: 0px;
  -webkit-margin-start: 0px;
  margin-inline-start: 0px;
}

.emotion-1 {
  width: 100%;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  position: relative;
}

.emotion-2 {
  -webkit-padding-end: 2rem;
  padding-inline-end: 2rem;
}

.emotion-2:focus,
.emotion-2[data-focus] {
  z-index: unset;
}

.emotion-3 {
  position: absolute;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  pointer-events: none;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

<div
  className="chakra-stack emotion-0"
>
  <div
    className="chakra-select__wrapper emotion-1"
  >
    <select
      className="chakra-select emotion-2"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      value="degree"
    >
      <option
        value="millisec"
      >
        millisec
      </option>
      <option
        value="degree"
      >
        degree
      </option>
    </select>
    <div
      className="chakra-select__icon-wrapper emotion-3"
    >
      <svg
        aria-hidden={true}
        className="chakra-select__icon"
        focusable={false}
        role="presentation"
        style={
          Object {
            "color": "currentColor",
            "height": "1em",
            "width": "1em",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
          fill="currentColor"
        />
      </svg>
    </div>
  </div>
  <div
    className="chakra-select__wrapper emotion-1"
  >
    <select
      className="chakra-select emotion-2"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      value="Tokyo"
    >
      <option
        value="Tokyo"
      >
        Tokyo
      </option>
      <option
        value="WGS84"
      >
        WGS84
      </option>
    </select>
    <div
      className="chakra-select__icon-wrapper emotion-3"
    >
      <svg
        aria-hidden={true}
        className="chakra-select__icon"
        focusable={false}
        role="presentation"
        style={
          Object {
            "color": "currentColor",
            "height": "1em",
            "width": "1em",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
          fill="currentColor"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`Should set props to GeodeticInput(unit is millisec) 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-0>*:not(style)~*:not(style) {
  margin-top: 3px;
  -webkit-margin-end: 0px;
  margin-inline-end: 0px;
  margin-bottom: 0px;
  -webkit-margin-start: 0px;
  margin-inline-start: 0px;
}

.emotion-1 {
  width: 100%;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  position: relative;
}

.emotion-2 {
  -webkit-padding-end: 2rem;
  padding-inline-end: 2rem;
}

.emotion-2:focus,
.emotion-2[data-focus] {
  z-index: unset;
}

.emotion-3 {
  position: absolute;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  pointer-events: none;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

<div
  className="chakra-stack emotion-0"
>
  <div
    className="chakra-select__wrapper emotion-1"
  >
    <select
      className="chakra-select emotion-2"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      value="millisec"
    >
      <option
        value="millisec"
      >
        millisec
      </option>
      <option
        value="degree"
      >
        degree
      </option>
    </select>
    <div
      className="chakra-select__icon-wrapper emotion-3"
    >
      <svg
        aria-hidden={true}
        className="chakra-select__icon"
        focusable={false}
        role="presentation"
        style={
          Object {
            "color": "currentColor",
            "height": "1em",
            "width": "1em",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
          fill="currentColor"
        />
      </svg>
    </div>
  </div>
  <div
    className="chakra-select__wrapper emotion-1"
  >
    <select
      className="chakra-select emotion-2"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      value="WGS84"
    >
      <option
        value="Tokyo"
      >
        Tokyo
      </option>
      <option
        value="WGS84"
      >
        WGS84
      </option>
    </select>
    <div
      className="chakra-select__icon-wrapper emotion-3"
    >
      <svg
        aria-hidden={true}
        className="chakra-select__icon"
        focusable={false}
        role="presentation"
        style={
          Object {
            "color": "currentColor",
            "height": "1em",
            "width": "1em",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
          fill="currentColor"
        />
      </svg>
    </div>
  </div>
</div>
`;
