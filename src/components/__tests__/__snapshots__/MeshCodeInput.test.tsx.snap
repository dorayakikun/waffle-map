// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render negative message when errorMessage is not blank 1`] = `
.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-1>*:not(style)~*:not(style) {
  margin-top: 3px;
  -webkit-margin-end: 0px;
  margin-inline-end: 0px;
  margin-bottom: 0px;
  -webkit-margin-start: 0px;
  margin-inline-start: 0px;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-4 {
  width: 100%;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  position: relative;
}

.emotion-5 {
  -webkit-padding-end: 2rem;
  padding-inline-end: 2rem;
}

.emotion-5:focus,
.emotion-5[data-focus] {
  z-index: unset;
}

.emotion-6 {
  position: absolute;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  pointer-events: none;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

<div
  className="chakra-form-control emotion-0"
  role="group"
>
  <div
    className="chakra-stack emotion-1"
  >
    <input
      aria-invalid={true}
      className="chakra-input emotion-0"
      disabled={false}
      id="meshCodeInput"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="5339-35-97.5339-35-98.5339-35-99"
      readOnly={false}
      required={false}
      value="5"
    />
    <div
      aria-live="polite"
      className="chakra-form__error-message emotion-3"
      id="meshCodeInput-feedback"
    >
      It seems there was something wrong ...
    </div>
    <div
      className="chakra-select__wrapper emotion-4"
    >
      <select
        aria-invalid={true}
        className="chakra-select emotion-5"
        disabled={false}
        id="meshCodeInput"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        readOnly={false}
        required={false}
        value="."
      >
        <option
          value=""
        >
          Split with dots
        </option>
        <option
          value=","
        >
          commas
        </option>
        <option
          value="."
        >
          dots
        </option>
      </select>
      <div
        className="chakra-select__icon-wrapper emotion-6"
      >
        <svg
          aria-hidden={true}
          className="chakra-select__icon"
          focusable={false}
          role="presentation"
          style={
            Object {
              "color": "currentColor",
              "height": "1em",
              "width": "1em",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
            fill="currentColor"
          />
        </svg>
      </div>
    </div>
  </div>
</div>
`;

exports[`Should set props to MeshCodeInput 1`] = `
.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-1>*:not(style)~*:not(style) {
  margin-top: 3px;
  -webkit-margin-end: 0px;
  margin-inline-end: 0px;
  margin-bottom: 0px;
  -webkit-margin-start: 0px;
  margin-inline-start: 0px;
}

.emotion-3 {
  width: 100%;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  position: relative;
}

.emotion-4 {
  -webkit-padding-end: 2rem;
  padding-inline-end: 2rem;
}

.emotion-4:focus,
.emotion-4[data-focus] {
  z-index: unset;
}

.emotion-5 {
  position: absolute;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  pointer-events: none;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

<div
  className="chakra-form-control emotion-0"
  role="group"
>
  <div
    className="chakra-stack emotion-1"
  >
    <input
      className="chakra-input emotion-0"
      disabled={false}
      id="meshCodeInput"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="5339-35-97.5339-35-98.5339-35-99"
      readOnly={false}
      required={false}
      value=""
    />
    <div
      className="chakra-select__wrapper emotion-3"
    >
      <select
        className="chakra-select emotion-4"
        disabled={false}
        id="meshCodeInput"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        readOnly={false}
        required={false}
        value="."
      >
        <option
          value=""
        >
          Split with dots
        </option>
        <option
          value=","
        >
          commas
        </option>
        <option
          value="."
        >
          dots
        </option>
      </select>
      <div
        className="chakra-select__icon-wrapper emotion-5"
      >
        <svg
          aria-hidden={true}
          className="chakra-select__icon"
          focusable={false}
          role="presentation"
          style={
            Object {
              "color": "currentColor",
              "height": "1em",
              "width": "1em",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
            fill="currentColor"
          />
        </svg>
      </div>
    </div>
  </div>
</div>
`;
