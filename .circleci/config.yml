version: 2

base_image: &base_image
  image: circleci/node:lts-browsers

build_image: &build_image
  docker:
    - <<: *base_image
  working_directory: ~/repo

save_lock: &save_lock
  save_cache:
    key: node_modules-{{ checksum "yarn.lock" }}
    paths:
      - node_modules

restore_lock: &restore_lock
  restore_cache:
    keys: 
      - node_modules-{{ checksum "yarn.lock" }}

save: &save
  save_cache:
    key: code-{{ .Revision }}
    paths:
      - .
      - ".git"
      - "~/.ssh"
      - "~/repo"

restore: &restore
  restore_cache:
    keys: 
      - code-{{ .Revision }}

jobs:
  upload_lock:
    <<: *build_image

    environment:
      GIT_AUTHOR_NAME: greenkeeperio-bot
      GIT_AUTHOR_EMAIL: support@greenkeeper.io
      GIT_COMMITTER_NAME: greenkeeperio-bot
      GIT_COMMITTER_EMAIL: support@greenkeeper.io

    steps:
      - checkout
      - run: sudo yarn global add greenkeeper-lockfile@2 
      - run: greenkeeper-lockfile-upload

  install:
    <<: *build_image

    environment:
      GIT_AUTHOR_NAME: greenkeeperio-bot
      GIT_AUTHOR_EMAIL: support@greenkeeper.io
      GIT_COMMITTER_NAME: greenkeeperio-bot
      GIT_COMMITTER_EMAIL: support@greenkeeper.io

    steps:
      - checkout
      - <<: *restore_lock
      - run: yarn;
      - run: sudo yarn global add greenkeeper-lockfile@2 
      - run: greenkeeper-lockfile-update
      - <<: *save_lock
      - <<: *save

  lint:
    <<: *build_image

    steps:
      - <<: *restore
      - <<: *restore_lock
      - run: yarn lint -- --format junit -o reports/eslint.xml

  typecheck:
    <<: *build_image
    steps:
      - <<: *restore
      - <<: *restore_lock
      - run: yarn typecheck

  audit:
    <<: *build_image
    steps:
      - <<: *restore
      - <<: *restore_lock
      - run: yarn audit

  test:
    <<: *build_image

    steps:
      - <<: *restore
      - <<: *restore_lock
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - run: 
          name: Run tests with JUnit as reporter
          command: yarn test -- --ci --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/js-test-results.xml"
      
      - run:
          name: Send coverage to Code Climate
          command: |
            ./cc-test-reporter after-build --exit-code $?
          environment:
            CC_TEST_REPORTER_ID: 3fe7d092eafbecae5628d6b7eac7c9304001b39c6e2a090e6bf043d259f2d018

      - store_test_results:
          path: ./reports

      - store_artifacts:
          path: ./reports

  deploy_pages:
    <<: *build_image

    working_directory: ~/repo/website

    steps:
      - <<: *restore
      - <<: *restore_lock
      - run: 
          name: Creates Git Config
          command: |
            git config --global user.email "dorayakikun@users.noreply.github.com"
            git config --global user.name dorayakikun
      - run: 
          name: Creates .netrc
          command: echo "machine github.com login dorayakikun password $GH_TOKEN" > ~/.netrc
      - run: yarn install
      - run: 
          name: Publish GitHub Pages
          command: GIT_USER=dorayakikun yarn publish-gh-pages

workflows:
  version: 2
  exec:
    jobs:
      - install
      - lint:
          requires:
            - install
      - typecheck:
          requires:
            - install
      - audit:
          requires:
            - install
      - test:
          requires:
            - install
      - upload_lock:
          requires:
            - lint
            - typecheck
            - audit
            - test
            - visual_regression_test
      - deploy_pages:
          requires:
            - upload_lock
